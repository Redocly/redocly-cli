// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`E2E miscellaneous bundle should not resolve $refs in preprocessors by default 1`] = `

[1] openapi.yaml:17:9 at #/paths/~1items/get/responses/400

Can't resolve $ref

15 |     summary: Items
16 |     responses: 
17 |       200: 
   |       ^^^^^
18 |         $ref: "./successful-request.response.yaml"
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |         
20 | /status:

Error was generated by the no-unresolved-refs rule.


[2] nested/status.yaml:5:5 at #/get/responses/400

Can't resolve $ref

3 | summary: Status
4 | responses:
5 |   200:
  |   ^^^^
6 |     $ref: ../successful-request.response.yaml
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |

Error was generated by the no-unresolved-refs rule.


❌ Validation failed with 2 errors.
run \`redocly lint --generate-ignore-file\` to add all problems to the ignore file.

bundling openapi.yaml...
[1] openapi.yaml:17:9 at #/paths/~1items/get/responses/400

Can't resolve $ref

15 |     summary: Items
16 |     responses: 
17 |       200: 
   |       ^^^^^
18 |         $ref: "./successful-request.response.yaml"
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |         
20 | /status:

Error was generated by the bundler rule.


[2] nested/status.yaml:5:5 at #/get/responses/400

Can't resolve $ref

3 | summary: Status
4 | responses:
5 |   200:
  |   ^^^^
6 |     $ref: ../successful-request.response.yaml
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |

Error was generated by the bundler rule.


❌ Errors encountered while bundling openapi.yaml: bundle not created (use --force to ignore errors).

`;

exports[`E2E miscellaneous bundle should resolve $refs with the resolveAfterTransformers option 1`] = `
openapi: 3.0.1
info:
  license:
    name: PROPRIETARY
    url: http://localhost:8080
  title: Test
  version: 1.0.0
servers:
  - url: http://localhost:8080
security: []
paths:
  /items:
    get:
      operationId: getItems
      summary: Items
      responses:
        '200':
          $ref: '#/components/responses/successful-request.response'
        '400':
          $ref: '#/components/responses/bad-request-error.response'
  /status:
    get:
      operationId: getStatus
      summary: Status
      responses:
        '200':
          $ref: '#/components/responses/successful-request.response'
        '400':
          $ref: '#/components/responses/bad-request-error.response'
components:
  responses:
    successful-request.response:
      description: Success
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    bad-request-error.response:
      description: Failure
      content:
        application/json+problem:
          schema:
            $ref: '#/components/schemas/error-schema'
  schemas:
    error-schema:
      type: object
      properties:
        message:
          type: string
        error_code:
          type: number

Woohoo! Your OpenAPI definitions are valid. 🎉

bundling openapi.yaml...
📦 Created a bundle for openapi.yaml at stdout <test>ms.

`;

exports[`E2E miscellaneous lint should not resolve $refs in preprocessors by default 1`] = `

validating openapi.yaml...
[1] openapi.yaml:17:9 at #/paths/~1items/get/responses/400

Can't resolve $ref

15 |     summary: Items
16 |     responses: 
17 |       200: 
   |       ^^^^^
18 |         $ref: "./successful-request.response.yaml"
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |         
20 | /status:

Error was generated by the no-unresolved-refs rule.


[2] nested/status.yaml:5:5 at #/get/responses/400

Can't resolve $ref

3 | summary: Status
4 | responses:
5 |   200:
  |   ^^^^
6 |     $ref: ../successful-request.response.yaml
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |

Error was generated by the no-unresolved-refs rule.


openapi.yaml: validated in <test>ms

❌ Validation failed with 2 errors.
run \`redocly lint --generate-ignore-file\` to add all problems to the ignore file.


`;

exports[`E2E miscellaneous lint should resolve $refs in preprocessors with the resolveAfterTransformers option 1`] = `

validating openapi.yaml...
openapi.yaml: validated in <test>ms

Woohoo! Your OpenAPI definition is valid. 🎉


`;

exports[`E2E miscellaneous stat should print a wrong summary without resolving refs in preprocessors 1`] = `

Document: openapi.yaml stats:

🚗 References: 3 
📦 External Documents: 0 
📈 Schemas: 0 
👉 Parameters: 0 
🔗 Links: 0 
➡️  Path Items: 2 
👷 Operations: 2 
🔖 Tags: 0 

openapi.yaml: stats processed in <test>ms


`;

exports[`E2E miscellaneous stat should print the correct summary with the resolveAfterTransformers option 1`] = `

Document: openapi.yaml stats:

🚗 References: 3 
📦 External Documents: 0 
📈 Schemas: 1 
👉 Parameters: 0 
🔗 Links: 0 
➡️  Path Items: 2 
👷 Operations: 2 
🔖 Tags: 0 

openapi.yaml: stats processed in <test>ms


`;
