type: object
properties:
  organization:
    type: string
    description: |-
      Stores your Redocly Workflows organization ID that the `push` command uses to push API definition files to the API registry.
      If an organization ID is not passed explicitly in command-line arguments, `push` will look for it in `redocly.yaml`.

      To find the organization ID:

        1. Log into Workflows.
        2. Access the **API registry** page.
        3. In your browser's address bar, find the page URL.
        4. The segment after `app.redocly.com/org/` is the organization ID.

      For example, if the URL is `app.redocly.com/org/test_docs`, the organization ID is `test_docs`.
  apis:
    additionalProperties:
      x-additionalPropertiesName: "{name}@{version}"
      type: object
      minItems: 1
      required:
        - root
      description: |-
        Specifies the name and version of an API associated with the root API definition with the pattern `{name}@{version}`.
        If the version is omitted, Redocly apps interpret it as 'latest' by default.
      properties:
        root:
          type: string
          description: "Path to the root API definition file of the specified API."
        labels:
          type: array
          description: "Optional labels assigned to the specified API in the Redocly API registry. The labels must exist in the Redocly Workflows organization in order to apply them."
          items:
            type: string
        lint:
          type: object
          description: |-
            Configures linting options for the specified API.
            Supports the same format and options as the global lint section described further in the schema.
        features.openapi:
          type: object
          description: |-
            Configures API reference documentation options for the specified API.
            Supports the same format and options as the global `features.openapi` section described further in the schema.
  lint:
    type: object
    description: A set of configurations to lint and decorate your APIs used when the `lint` and `bundle` commands execute.
    properties:
      plugins:
        type: array
        description: >-
          Import any local plugins (e.g. `./local-plugins.js`).
          The built-in plugins do not need to be imported.
          There is not support for community plugins yet.
        example: ['./local-plugin.js']
        items:
          type: string
          format: path
      extends:
        type: array
        description: Choose the base configuration. Defaults to `recommended`. You may also use `minimal` or add your own plugins.
        items:
          type: string
      preprocessors:
        type: object
        description: >-
          Change the severity level of any preprocessors in your extended configurations.
          Some rules may also receive additional configurations.
          Preprocessors run first during `lint` and `bundle`.
        additionalProperties:
          description: >-
            List each preprocessor by name.
            For example, `do-this-first`.
          oneOf:
            - type: string
              description: Specify the severity level as a string shortcut (or more explicitly as an object).
              enum:
                - on
                - off
            - type: object
              description: Specify the severity level as an object. Useful when you need to supply additional properties for configuration.
              properties:
                severity:
                  type: string
                  enum:
                    - on
                    - off
                  description: The severity level if the problem occurs.
              additionalProperties: true
      rules:
        type: object
        title: Rules Object
        description: >-
          Change the severity level of any rules in your extended configurations.
          Some rules may also receive additional configurations.
          Rules run during the `lint` command after preprocessors.
          They run during the `bundle` command between preprocessors and decorators if the `--lint` option is used.
        additionalProperties:
          description: >-
            List each rule by name.
            For example, `no-empty-servers`.
          oneOf:
            - type: string
              description: Specify the severity level as a string shortcut (or more explicitly as an object).
              enum:
                - error
                - warn
                - off
            - type: object
              description: Specify the severity level as an object. Useful when you need to supply additional properties for configuration.
              required:
                - severity
              properties:
                severity:
                  type: string
                  enum:
                    - error
                    - warn
                    - off
                  description: The severity level if the problem occurs.
              additionalProperties: true
      decorators:
        type: object
        description: >-
          Enable or disable decorators.
          They run during the `bundle` command after linting.
        additionalProperties:
          description: >
            List each decorator by name.
            For example, `remove-x-internal`.
          oneOf:
            - type: string
              description: Specify the severity level as a string shortcut (or more explicitly as an object).
              enum:
                - off
                - on
            - type: object
              description: Specify the severity level as an object. Useful when you need to supply additional properties for configuration.
              properties:
                severity:
                  type: string
                  enum:
                    - on
                    - off
                  description: The severity level if the problem occurs.
              additionalProperties: true
  features.mockServer:
    type: object
    description: Configure the mock server behavior in the API registry.
    properties:
      errorIfForcedExampleNotFound:
        description: When using the custom `x-redocly-response-body-example` header in the request, return an error if the requested example is not found in the API definition.
        type: boolean
        default: false
      strictExamples:
        description: Always return examples exactly how they are defined in the API definition without modifying their contents.
        type: boolean
        default: false
  features.openapi:
    type: object
    description: |-
      Configuration options supported by Redocly for rendering OpenAPI into web pages.
      Used when previewing or building the docs.
      See the [list of options supported](https://redocly.com/docs/api-reference-docs/configuration/functionality/).
  region:
    type: string
    enum:
      - us
      - eu
    default: us
    description: Sets the region used for the `login` and `push` commands. The `eu` region is limited to enterprise customers.
  resolve:
    type: object
    description: >
      Use this when you have external links in your definition that are not publicly accessible (except for Redocly API registry links).
      We recommend using environment variables where possible.
    properties:
      http:
        type: object
        description: Description of URL pattern matches and the corresponding headers to use when resolving references.
        properties:
          headers:
            type: array
            minItems: 1
            items:
              type: object
              required:
                - matches
                - name
              properties:
                matches:
                  type: string
                  description: The URL pattern to match. For example, `https://api.example.com/v2/**` or `https://example.com/*/test.yaml`
                name:
                  type: string
                  description: The header name. For example, `X-API-KEY`.
                value:
                  type: string
                  description: The value of the header. We recommend to use `envVariable` instead for any secrets.
                envVariable:
                  type: string
                  description: The environment variable name which will be resolved and should contain the value.
