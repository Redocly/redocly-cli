arazzo: 1.0.1
info:
  title: Mask sensitive input values
  description: >-
    Testing functionality of masking sensitive input values in verbose output
  version: 1.0.0

sourceDescriptions:
  - name: museum-api
    type: openapi
    url: ../museum-api.yaml
  - name: tickets-from-museum-api
    type: arazzo
    url: ../museum-tickets.yaml

workflows:
  - workflowId: get-museum-hours
    inputs:
      type: object
      properties:
        username:
          type: string
        env:
          type: object
          properties:
            AUTH_TOKEN:
              type: string
              format: password
        password:
          type: string
          format: password
          description: additional password.
    parameters:
      - in: header
        name: Authorization
        value: $inputs.env.AUTH_TOKEN
      - in: header
        name: password
        value: $inputs.password
      - in: header
        name: username
        value: $inputs.username
      - in: header
        name: masked-combined-value
        value: '{$inputs.username} and {$inputs.password} and maybe {$inputs.env.AUTH_TOKEN}'
    description: >-
      This workflow demonstrates how to get the museum opening hours and buy tickets.
    steps:
      - stepId: get-museum-hours
        parameters:
          - in: header
            name: multi-word-secret
            value: Bearer {$inputs.password}
        description: >-
          Get museum hours by resolving request details with getMuseumHours operationId from museum-api.yaml description.
        operationId: $sourceDescriptions.museum-api.getMuseumHours
        successCriteria:
          - condition: $statusCode == 200
        outputs:
          schedule: $response.body
  - workflowId: events-crud
    description: >-
      This workflow demonstrates how to list, create, update, and delete special events at the museum.
    parameters:
      - in: header
        name: Authorization
        value: $inputs.env.AUTH_TOKEN
      - in: header
        name: multi-word-secret
        value: composed {$inputs.env.AUTH_TOKEN}
    inputs:
      type: object
      properties:
        username:
          type: string
        env:
          type: object
          properties:
            AUTH_TOKEN:
              type: string
              format: password
        password:
          type: string
          format: password
        secret:
          type: object
          properties:
            secretValue:
              type: string
              format: password
    steps:
      - stepId: list-events
        description: >-
          Request the list of events.
        operationPath: '{$sourceDescriptions.museum-api.url}#/paths/~1special-events/get'
        outputs:
          events: $response.body
      - stepId: create-event
        description: >-
          Create a new special event.
        operationPath: '{$sourceDescriptions.museum-api.url}#/paths/~1special-events/post'
        requestBody:
          payload:
            username: $inputs.username
            secret: $inputs.password
            multiwordSecret: Bearer {$inputs.secret.secretValue}
            name: 'Mermaid Treasure Identification and Analysis'
            location: 'Under the seaaa ðŸ¦€ ðŸŽ¶ ðŸŒŠ.'
            eventDescription: 'Join us as we review and classify a rare collection of 20 thingamabobs, gadgets, gizmos, whoosits, and whatsits, kindly donated by Ariel.'
            dates:
              - '2023-09-05'
              - '2023-09-08'
            price: 0
        successCriteria:
          - condition: $statusCode == 201
          - context: $response.body
            condition: $.name == 'Mermaid Treasure Identification and Analysis'
            type: jsonpath
