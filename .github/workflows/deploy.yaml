name: CD to NPM & AWS S3

on:
  push:
    tags:
      - v[0-9]*.[0-9]*.[0-9]*
      - v[0-9]+.[0-9]+.[0-9]+-[a-z]+.[0-9]+ # beta/rc releases

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm test
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci

      - name: Bundle into single file
        run: npm run webpack-bundle

      - name: Upload to AWS S3 bucket
        run: npm run upload
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          AWS_S3_PATH: openapi-cli-dist

      - name: Upload to AWS sandbox S3 bucket
        run: npm run upload
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SANDBOX_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SANDBOX_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          AWS_S3_PATH: redocly-sandbox-openapi-cli-dist
  publish:
    needs: [test, deploy]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci

      - name: Publish to NPM
        run: cd packages/core && npm publish && cd ../cli && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  dockerhub:
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            redocly/cli
            ghcr.io/redocly/cli

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
  test-released-version:
    needs:
      - test
      - deploy
      - publish
      - dockerhub
    name: Test released version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Install CLI from npm
        run: npm i -g @redocly/cli@latest
      - name: Test version from NPM
        run: |
          expected_version="$(cat package.json | jq -r '.version')"
          actual_version="$(redocly --version)"
          if [[ $expected_version == $actual_version  ]]; then
            echo "The version is correct. Actual version: $actual_version"
          else
            echo "The version is incorrect. Expected: $expected_version, actual: $actual_version"
            exit 1
          fi
          redocly lint https://raw.githubusercontent.com/Rebilly/api-definitions/main/openapi/openapi.yaml
          redocly bundle https://raw.githubusercontent.com/Rebilly/api-definitions/main/openapi/openapi.yaml
          redocly build-docs https://raw.githubusercontent.com/Rebilly/api-definitions/main/openapi/openapi.yaml
      - name: Pull docker image
        run: docker pull redocly/cli:latest
      - name: Test docker image
        run: |
          expected_version="$(cat package.json | jq -r '.version')"
          actual_version="$(docker run --rm redocly/cli --version)"
          if [[ $expected_version == $actual_version  ]]; then
            echo "The version is correct. Actual version: $actual_version"
          else
            echo "The version is incorrect. Expected: $expected_version, actual: $actual_version"
            exit 1
          fi
          docker run --rm redocly/cli lint https://raw.githubusercontent.com/Rebilly/api-definitions/main/openapi/openapi.yaml
          docker run --rm redocly/cli bundle https://raw.githubusercontent.com/Rebilly/api-definitions/main/openapi/openapi.yaml
          docker run --rm redocly/cli build-docs https://raw.githubusercontent.com/Rebilly/api-definitions/main/openapi/openapi.yaml
