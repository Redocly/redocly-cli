apiVersion: v1
kind: ConfigMap
metadata:
  name: redocly-test-config
  namespace: redocly-cli-test
data:
  # Sample OpenAPI specification for testing
  test-api.yaml: |
    openapi: 3.0.0
    info:
      title: Test API
      version: 1.0.0
      description: Test API for Redocly CLI performance testing
    servers:
      - url: https://api.example.com/v1
    paths:
      /users:
        get:
          summary: Get users
          responses:
            '200':
              description: Successful response
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
      /users/{id}:
        get:
          summary: Get user by ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
          responses:
            '200':
              description: Successful response
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
            '404':
              description: User not found

  # Large OpenAPI specification for realistic testing
  large-api.yaml: |
    openapi: 3.0.0
    info:
      title: Large Enterprise API
      version: 1.0.0
      description: A large enterprise API specification with many endpoints, schemas, and references.
    servers:
      - url: https://api.enterprise.com/v1
    paths:
      /users:
        get:
          summary: Get all users
          responses:
            '200':
              description: Successful response
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
      /products:
        get:
          summary: Get all products
          responses:
            '200':
              description: Successful response
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
      /orders:
        get:
          summary: Get all orders
          responses:
            '200':
              description: Successful response
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
    components:
      schemas:
        User:
          type: object
          properties:
            id:
              type: string
              format: uuid
            email:
              type: string
              format: email
            firstName:
              type: string
            lastName:
              type: string
            address:
              $ref: '#/components/schemas/Address'
        Product:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            price:
              type: number
            category:
              type: string
        Order:
          type: object
          properties:
            id:
              type: string
              format: uuid
            userId:
              type: string
              format: uuid
            items:
              type: array
              items:
                $ref: '#/components/schemas/OrderItem'
        OrderItem:
          type: object
          properties:
            productId:
              type: string
              format: uuid
            quantity:
              type: integer
            price:
              type: number
        Address:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            country:
              type: string

  # Redocly configuration
  redocly.yaml: |
    apis:
      test-api@v1:
        root: ./test-api.yaml
    # telemetry: 'off'  # Commented out to enable telemetry and reproduce the issue
