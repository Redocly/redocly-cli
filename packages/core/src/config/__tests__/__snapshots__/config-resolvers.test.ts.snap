// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resolveConfig should ignore minimal from the root and read local file 1`] = `
Object {
  "decorators": Object {},
  "doNotResolveExamples": undefined,
  "oas2Decorators": Object {},
  "oas2Preprocessors": Object {},
  "oas2Rules": Object {},
  "oas3_0Decorators": Object {},
  "oas3_0Preprocessors": Object {},
  "oas3_0Rules": Object {
    "no-empty-servers": "error",
    "no-example-value-and-externalValue": "error",
    "no-invalid-media-type-examples": "error",
    "no-server-example.com": "warn",
    "no-server-trailing-slash": "error",
    "no-servers-empty-enum": "error",
    "no-undefined-server-variable": "error",
    "no-unused-components": "warn",
  },
  "oas3_1Decorators": Object {},
  "oas3_1Preprocessors": Object {},
  "oas3_1Rules": Object {
    "no-empty-servers": "error",
    "no-example-value-and-externalValue": "error",
    "no-server-example.com": "warn",
    "no-server-trailing-slash": "error",
    "no-servers-empty-enum": "error",
    "no-undefined-server-variable": "error",
    "no-unused-components": "warn",
  },
  "preprocessors": Object {},
  "recommendedFallback": false,
  "rules": Object {
    "assertions": "warn",
    "boolean-parameter-prefixes": "error",
    "info-contact": "off",
    "info-description": "warn",
    "info-license": "warn",
    "info-license-url": "warn",
    "local/operation-id-not-test": "error",
    "no-ambiguous-paths": "warn",
    "no-enum-type-mismatch": "error",
    "no-identical-paths": "error",
    "no-invalid-media-type-examples": "error",
    "no-path-trailing-slash": "error",
    "no-unresolved-refs": "error",
    "operation-2xx-response": "warn",
    "operation-4xx-response": "error",
    "operation-description": "error",
    "operation-operationId": "warn",
    "operation-operationId-unique": "error",
    "operation-operationId-url-safe": "error",
    "operation-parameters-unique": "error",
    "operation-security-defined": "error",
    "operation-singular-tag": "off",
    "operation-summary": "error",
    "operation-tag-defined": "off",
    "parameter-description": "off",
    "path-declaration-must-exist": "error",
    "path-http-verbs-order": "error",
    "path-not-include-query": "error",
    "path-parameters-defined": "error",
    "paths-kebab-case": "off",
    "spec": "error",
    "tag-description": "warn",
    "tags-alphabetical": "off",
  },
}
`;

exports[`resolveLint should resolve extends with local file config witch contains path to nested config 1`] = `
Object {
  "decorators": Object {},
  "doNotResolveExamples": undefined,
  "oas2Decorators": Object {},
  "oas2Preprocessors": Object {},
  "oas2Rules": Object {},
  "oas3_0Decorators": Object {},
  "oas3_0Preprocessors": Object {},
  "oas3_0Rules": Object {
    "no-empty-servers": "error",
    "no-example-value-and-externalValue": "error",
    "no-invalid-media-type-examples": "warn",
    "no-server-example.com": "warn",
    "no-server-trailing-slash": "error",
    "no-servers-empty-enum": "error",
    "no-undefined-server-variable": "error",
    "no-unused-components": "warn",
  },
  "oas3_1Decorators": Object {},
  "oas3_1Preprocessors": Object {},
  "oas3_1Rules": Object {
    "no-empty-servers": "error",
    "no-example-value-and-externalValue": "error",
    "no-server-example.com": "warn",
    "no-server-trailing-slash": "error",
    "no-servers-empty-enum": "error",
    "no-undefined-server-variable": "error",
    "no-unused-components": "warn",
  },
  "preprocessors": Object {},
  "recommendedFallback": undefined,
  "rules": Object {
    "assertions": Array [
      Object {
        "assertionId": "path-item-get-defined",
        "defined": true,
        "message": "Every path item must have a GET operation.",
        "property": "get",
        "subject": "PathItem",
      },
      Object {
        "assertionId": "tag-description",
        "message": "Tag description must be at least 13 characters and end with a full stop.",
        "minLength": 13,
        "pattern": "/\\\\.$/",
        "property": "description",
        "severity": "error",
        "subject": "Tag",
      },
    ],
    "boolean-parameter-prefixes": "error",
    "info-contact": "off",
    "info-description": "warn",
    "info-license": "warn",
    "info-license-url": "warn",
    "local/operation-id-not-test": "error",
    "no-ambiguous-paths": "warn",
    "no-enum-type-mismatch": "error",
    "no-identical-paths": "error",
    "no-invalid-media-type-examples": "warn",
    "no-path-trailing-slash": "error",
    "no-unresolved-refs": "error",
    "operation-2xx-response": "error",
    "operation-4xx-response": "off",
    "operation-description": "off",
    "operation-operationId": "warn",
    "operation-operationId-unique": "error",
    "operation-operationId-url-safe": "error",
    "operation-parameters-unique": "error",
    "operation-security-defined": "error",
    "operation-singular-tag": "off",
    "operation-summary": "error",
    "operation-tag-defined": "off",
    "parameter-description": "off",
    "path-declaration-must-exist": "error",
    "path-not-include-query": "error",
    "path-parameters-defined": "error",
    "paths-kebab-case": "off",
    "spec": "error",
    "tag-description": "warn",
    "tags-alphabetical": "off",
  },
}
`;
